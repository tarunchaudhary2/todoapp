## ðŸš€ pipeline

# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

#Its been deployed and working great

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '20000000-0000-0000-0000-000000000000'
  imageRepository: 'container_name'
  containerRegistry: 'registry_name'
  dockerfilePath: 'Dockerfile_path'
  tag: '$(Build.BuildId)'

  # Self Hosted Agent pool name or use azure agent
  poolname: 'pool_name'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(poolname)
    steps:

    - task: Bash@3              #can be installed on agent manually by using bash
      displayName: Azure-devops add or update
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
            echo "Current Azure CLI Version:"
            az --version || echo "Azure CLI not installed"
            echo "Upgrading Azure CLI to latest version..."
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            echo "Verifying Azure CLI version after upgrade:"
            az --version
            echo "Removing old azure-devops extension if present..."
            az extension remove --name azure-devops || true
            echo "Installing latest azure-devops extension..."
            az extension add --name azure-devops
            echo "Installed Azure DevOps extension version:"
            az extension show --name azure-devops
            
    - task: Bash@3                       #can be installed on agent manually by using bash
      displayName: install docker
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          echo sudo -S apt-get install docker.io -y
    
    - task: AzureCLI@2
      displayName: Azure login
      inputs:
        azureSubscription: 'azureSubscription_name'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az acr login --name=$(containerRegistry)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    
    - task: AzureCLI@2
      displayName: creating container
      inputs:
        azureSubscription: 'azureSubscription_name'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'        #username and password not recommended, always use key wault for saving passwords "this is for demo purpose only"
        inlineScript: |
          az container create \
                    --name todoapp \
                    --resource-group todo-rg-container \
                    --image $(containerRegistry)/$(imageRepository):$(tag) \
                    --registry-login-server $(containerRegistry) \
                    --registry-username registry_user_name \
                    --registry-password registry_password \    
                    --dns-name-label todoapp-container-dns-label \
                    --os-type Linux \
                    --cpu 1 \
                    --memory 1.5 \
                    --ports 80